{
  "config": {
    "step": {
      "pick_implementation": {
        "title": "Select SpotifyPlus OAuth Credential"
      },
      "reauth_confirm": {
        "title": "SpotifyPlus Re-Authentication Required",
        "description": "The Spotify integration needs to re-authenticate with Spotify for account: {account}"
      }
    },
    "abort": {
      "authorize_url_timeout": "Timeout generating authorize URL.",
      "missing_configuration": "The Spotify integration is not configured. Please follow the documentation.",
      "no_url_available": "[%key:common::config_flow::abort::oauth2_no_url_available%]",
      "reauth_account_mismatch": "Spotify account authenticated with does not match the account needing re-authentication for the SpotifyPlus integration; please check the System Log for further information.",
      "invalid_access_token": "OAuth access token is invalid for the SpotifyPlus integration; please check the System Log for further information.",
      "oauth_error": "OAuth error occurred while processing SpotifyPlus OAuth Application Credentials; please check the System Log for further information.",
      "oauth_timeout": "OAuth timeout error occurred while processing SpotifyPlus OAuth Application Credentials.  This usually indicates a temporary condition; please check the System Log for further information.",
      "oauth_unauthorized": "OAuth Application Credentials are unauthorized for use by the SpotifyPlus integration; please check the System Log for further information.",
      "oauth_failed": "OAuth request failed while processing SpotifyPlus OAuth Application Credentials; please check the System Log for further information."
    },
    "create_entry": { "default": "Successfully authenticated with Spotify." }
  },
  "options": {
    "step": {
      "init": {
        "title": "{name} Options",
        "description": "Configure SpotifyPlus integration options that control functionality.",
        "data": {
          "device_default": "Default Spotify Connect Player Device ID when none are active.",
          "device_loginid": "Spotify Connect canonical loginid to use when connecting to an inactive device.",
          "device_password": "Spotify Connect password to use when connecting to an inactive device.",
          "device_username": "Spotify Connect username to use when connecting to an inactive device.",
          "script_turn_on": "Script called to turn on device that plays media content.",
          "script_turn_off": "Script called to turn off device that plays media content.",
          "source_list_hide": "The semi-colon delimited list of device names to hide in the source list."
        },
        "submit": "Save"
      }
    },
    "error": {
      "no_player_devices": "Per Spotify Web API, there are currently no Spotify Connect devices active.  Please close the configuration options, play a track on any Spotify Connect player for a minute or two, and then open the configuration options again.",
      "device_password_required": "Spotify Connect Device Password is required if a Spotify Connect Device Username was specified.",
      "device_loginid_required": "Spotify Connect Device LoginId is required if a Spotify Connect Device Username was specified."
    }
  },
  "system_health": {
    "info": {
      "integration_version": "Version",
      "api_endpoint_reachable": "Spotify API endpoint reachable",
      "clients_configured": "Clients Configured"
    }
  },
  "issues": {
    "removed_yaml": {
      "title": "The Spotify YAML configuration has been removed",
      "description": "Configuring Spotify using YAML has been removed.\n\nYour existing YAML configuration is not used by Home Assistant.\n\nRemove the YAML configuration from your configuration.yaml file and restart Home Assistant to fix this issue."
    }
  },
  "services": {
    "follow_artists": {
      "name": "Follow Artists",
      "description": "Add the current user as a follower of one or more artists.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "ids": {
          "name": "ID's",
          "description": "A comma-separated list of Spotify artist id's (e.g. `2CIMQHirSU0MQqyYHq0eOx,1IQ2e1buppatiN1bxUVkrk`).  A maximum of 50 id's may be specified.  If omitted, the currently playing track artist uri id value is used."
        }
      }
    },
    "follow_playlist": {
      "name": "Follow Playlist",
      "description": "Add the current user as a follower of a playlist.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "playlist_id": {
          "name": "ID's",
          "description": "The Spotify ID of the playlist (e.g. `3cEYpjA9oz9GiPac4AsH4n`)."
        },
        "public": {
          "name": "Public?",
          "description": "If true the playlist will be included in user's public playlists, if false it will remain private."
        }
      }
    },
    "follow_users": {
      "name": "Follow Users",
      "description": "Add the current user as a follower of one or more users.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "ids": {
          "name": "ID's",
          "description": "A comma-separated list of the Spotify user IDs (e.g. 'smedjan,3758dfdsfjk435hjk6k79lm0n3c4').  A maximum of 50 IDs can be sent in one request."
        }
      }
    },
    "get_album": {
      "name": "Get Album",
      "description": "Get Spotify catalog information for a single album.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "album_id": {
          "name": "Album Id",
          "description": "The Spotify ID of the album."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the user account will take priority over this parameter."
        }
      }
    },
    "get_album_favorites": {
      "name": "Get Album Favorites",
      "description": "Get a list of the albums saved in the current Spotify user's 'Your Library'.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items when manual paging is used.  Default is 20, Range is 1 to 50."
        },
        "offset": {
          "name": "Offset",
          "description": "The page index offset of the first item to return.  Use with limit to get the next set of items.  Default is 0 (the first item)."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        },
        "sort_result": {
          "name": "Sort Result?",
          "description": "True to sort result items by name prior to returning to the caller; otherwise, False to return results in the order that the Spotify Web API returned them."
        }
      }
    },
    "get_album_new_releases": {
      "name": "Get Album New Releases",
      "description": "Get a list of new album releases featured in Spotify.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items when manual paging is used.  Default is 20, Range is 1 to 50."
        },
        "offset": {
          "name": "Offset",
          "description": "The page index offset of the first item to return.  Use with limit to get the next set of items.  Default is 0 (the first item)."
        },
        "country": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        },
        "sort_result": {
          "name": "Sort Result?",
          "description": "True to sort result items by name prior to returning to the caller; otherwise, False to return results in the order that the Spotify Web API returned them."
        }
      }
    },
    "get_artist": {
      "name": "Get Artist",
      "description": "Get Spotify catalog information for a single artist.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "artist_id": {
          "name": "Artist Id",
          "description": "The Spotify ID of the artist."
        }
      }
    },
    "get_artist_albums": {
      "name": "Get Artist Albums",
      "description": "Get Spotify catalog information about an artist's albums.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "artist_id": {
          "name": "Artist Id",
          "description": "The Spotify ID of the artist."
        },
        "include_groups": {
          "name": "Include Groups",
          "description": "A comma-separated list of keywords that will be used to filter the response.  If not supplied, all album types will be returned. Valid values are `album`, `single`, `appears_on`, `compilation`."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items when manual paging is used.  Default is 20, Range is 1 to 50."
        },
        "offset": {
          "name": "Offset",
          "description": "The page index offset of the first item to return.  Use with limit to get the next set of items.  Default is 0 (the first item)."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        },
        "sort_result": {
          "name": "Sort Result?",
          "description": "True to sort result items by name prior to returning to the caller; otherwise, False to return results in the order that the Spotify Web API returned them."
        }
      }
    },
    "get_artists_followed": {
      "name": "Get Artists Followed",
      "description": "Get the current user's followed artists.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "after": {
          "name": "After Artist ID",
          "description": "The last artist ID retrieved from the previous request, or null for the first request."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items when manual paging is used.  Default is 20, Range is 1 to 50."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        },
        "sort_result": {
          "name": "Sort Result?",
          "description": "True to sort result items by name prior to returning to the caller; otherwise, False to return results in the order that the Spotify Web API returned them."
        }
      }
    },
    "get_browse_categorys": {
      "name": "Get Browse Categorys",
      "description": "Get a sorted list of ALL categories used to tag items in Spotify.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "country": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the user account will take priority over this parameter."
        },
        "locale": {
          "name": "Locale",
          "description": "The desired language, consisting of a lowercase ISO 639-1 language code and an uppercase ISO 3166-1 alpha-2 country code, joined by an underscore.  For example `es_MX`, meaning `Spanish (Mexico)`.  Provide this parameter if you want the results returned in a particular language (where available).  Note that if locale is not supplied, or if the specified language is not available, all strings will be returned in the Spotify default language (American English)."
        },
        "refresh": {
          "name": "Refresh Cache",
          "description": "True to return real-time information from the spotify web api and update the cache; otherwise, False to just return the cached value."
        }
      }
    },
    "get_category_playlists": {
      "name": "Get Category Playlists",
      "description": "Get a list of Spotify playlists tagged with a particular category.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "category_id": {
          "name": "Category ID",
          "description": "The Spotify category ID (not name) for the category."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items when manual paging is used.  Default is 20, Range is 1 to 50."
        },
        "offset": {
          "name": "Offset",
          "description": "The page index offset of the first item to return.  Use with limit to get the next set of items.  Default is 0 (the first item)."
        },
        "country": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        },
        "sort_result": {
          "name": "Sort Result?",
          "description": "True to sort result items by name prior to returning to the caller; otherwise, False to return results in the order that the Spotify Web API returned them."
        }
      }
    },
    "get_featured_playlists": {
      "name": "Get Featured Playlists",
      "description": "Get a list of Spotify featured playlists.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items when manual paging is used.  Default is 20, Range is 1 to 50."
        },
        "offset": {
          "name": "Offset",
          "description": "The page index offset of the first item to return.  Use with limit to get the next set of items.  Default is 0 (the first item)."
        },
        "country": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the user account will take priority over this parameter."
        },
        "locale": {
          "name": "Locale",
          "description": "The desired language, consisting of a lowercase ISO 639-1 language code and an uppercase ISO 3166-1 alpha-2 country code, joined by an underscore.  For example `es_MX`, meaning `Spanish (Mexico)`.  Provide this parameter if you want the results returned in a particular language (where available).  Note that if locale is not supplied, or if the specified language is not available, all strings will be returned in the Spotify default language (American English)."
        },
        "timestamp": {
          "name": "Timestamp",
          "description": "A timestamp in ISO 8601 format (yyyy-MM-ddTHH:mm:ss). Use this parameter to specify the user's local time to get results tailored for that specific date and time in the day. If not provided, the response defaults to the current UTC time."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        },
        "sort_result": {
          "name": "Sort Result?",
          "description": "True to sort result items by name prior to returning to the caller; otherwise, False to return results in the order that the Spotify Web API returned them."
        }
      }
    },
    "get_player_devices": {
      "name": "Get Player Devices",
      "description": "Get information about a user's available Spotify Connect player devices.  Some device models are not supported and will not be listed in the API response.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "refresh": {
          "name": "Refresh?",
          "description": "True to return real-time information from the spotify web api and update the cache; otherwise, False to just return the cached value."
        },
        "sort_result": {
          "name": "Sort Result?",
          "description": "True to sort result items by name prior to returning to the caller; otherwise, False to return results in the order that the Spotify Web API returned them."
        }
      }
    },
    "get_player_now_playing": {
      "name": "Get Player Now Playing",
      "description": "Get the object currently being played on the user's Spotify account.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the user account will take priority over this parameter."
        },
        "additional_types": {
          "name": "Additional Types",
          "description": "A comma-separated list of item types that your client supports besides the default track type. Valid types are 'track' and 'episode'."
        }
      }
    },
    "get_player_playback_state": {
      "name": "Get Player Playback State",
      "description": "Get information about the user's current playback state, including track or episode, progress, and active device.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the user account will take priority over this parameter."
        },
        "additional_types": {
          "name": "Additional Types",
          "description": "A comma-separated list of item types that your client supports besides the default track type. Valid types are 'track' and 'episode'."
        }
      }
    },
    "get_player_queue_info": {
      "name": "Get Player Queue Info",
      "description": "Get the list of objects that make up the user's playback queue.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        }
      }
    },
    "get_player_recent_tracks": {
      "name": "Get Player Recent Tracks",
      "description": "Get tracks from the current user's recently played tracks; currently doesn't support podcast episodes, and only 50 items may be returned due to spotify limits.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items when manual paging is used.  Default is 20, Range is 1 to 50."
        },
        "after": {
          "name": "After Time MS",
          "description": "Returns all items after (but not including) this cursor position, which is a Unix timestamp in milliseconds.  If `after` is specified, `before` must not be specified.  Use with limit to get the next set of items.  Default is `0` (the first item)."
        },
        "before": {
          "name": "Before Time MS",
          "description": "Returns all items before (but not including) this cursor position, which is a Unix timestamp in milliseconds.  If `before` is specified, `after` must not be specified.  Use with limit to get the next set of items.  Default is `0` (the first item)."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "get_playlist": {
      "name": "Get Playlist",
      "description": "Get a playlist owned by a Spotify user.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "playlist_id": {
          "name": "Playlist Id",
          "description": "The Spotify ID of the playlist."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the user account will take priority over this parameter."
        },
        "fields": {
          "name": "Fields",
          "description": "A comma-separated list of fields to return from the Spotify Web API. All fields are returned if omitted."
        },
        "additional_types": {
          "name": "Additional Types",
          "description": "A comma-separated list of item types that your client supports besides the default track type. Valid types are 'track' and 'episode'."
        }
      }
    },
    "get_playlist_favorites": {
      "name": "Get Playlist Favorites",
      "description": "Get a list of the playlists owned or followed by the current Spotify user.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items when manual paging is used.  Default is 20, Range is 1 to 50."
        },
        "offset": {
          "name": "Offset",
          "description": "The page index offset of the first item to return.  Use with limit to get the next set of items.  Default is 0 (the first item)."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        },
        "sort_result": {
          "name": "Sort Result?",
          "description": "True to sort result items by name prior to returning to the caller; otherwise, False to return results in the order that the Spotify Web API returned them."
        }
      }
    },
    "get_show": {
      "name": "Get Show",
      "description": "Get Spotify catalog information for a single show.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "show_id": {
          "name": "Show Id",
          "description": "The Spotify ID of the show."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the user account will take priority over this parameter."
        }
      }
    },
    "get_show_episodes": {
      "name": "Get Show Episodes",
      "description": "Get Spotify catalog information about a show's episodes.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "show_id": {
          "name": "Show ID",
          "description": "The Spotify ID for the show."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items when manual paging is used.  Default is 20, Range is 1 to 50."
        },
        "offset": {
          "name": "Offset",
          "description": "The page index offset of the first item to return.  Use with limit to get the next set of items.  Default is 0 (the first item)."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "get_show_favorites": {
      "name": "Get Show Favorites",
      "description": "Get a list of the shows saved in the current Spotify user's 'Your Library'.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items when manual paging is used.  Default is 20, Range is 1 to 50."
        },
        "offset": {
          "name": "Offset",
          "description": "The page index offset of the first item to return.  Use with limit to get the next set of items.  Default is 0 (the first item)."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        },
        "sort_result": {
          "name": "Sort Result?",
          "description": "True to sort result items by name prior to returning to the caller; otherwise, False to return results in the order that the Spotify Web API returned them."
        }
      }
    },
    "get_spotify_connect_device": {
      "name": "Get Spotify Connect Device",
      "description": "Get information about a specific Spotify Connect player device, and (optionally) activate the device if it requires it.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "device_value": {
          "name": "Device Value",
          "description": "The id (e.g. '30fbc80e35598f3c242f2120413c943dfd9715fe') or name (e.g. 'Office') of the Spotify Connect Player device this command is targeting.  If an '*' is specified, then the SpotifyPlus default device is used."
        },
        "verify_user_context": {
          "name": "Verify User Context?",
          "description": "If True, the active user context of the resolved device is checked to ensure it matches the Spotify Connect user context specified in the SpotifyPlus configuration options.  If False, the user context will not be checked.  Default is True."
        },
        "verify_timeout": {
          "name": "Verify Timeout",
          "description": "Maximum time to wait (in seconds) for the device to become active in the Spotify Connect device list.  This value is only used if a Connect command has to be issued to activate the device. Default is 5; value range is 0 - 10."
        },
        "refresh_device_list": {
          "name": "Refresh Device List?",
          "description": "True to refresh the Spotify Connect device list; otherwise, False to use the Spotify Connect device list cache.  Default is True."
        },
        "activate_device": {
          "name": "Activate Device?",
          "description": "True to activate the device if necessary; otherwise, False."
        },
        "delay": {
          "name": "Delay",
          "description": "Time delay (in seconds) to wait AFTER issuing any command to the device.  This delay will give the spotify zeroconf api time to process the change before another command is issued.  Default is 0.25; value range is 0 - 10."
        }
      }
    },
    "get_spotify_connect_devices": {
      "name": "Get Spotify Connect Devices",
      "description": "Get information about all available Spotify Connect player (both static and dynamic) devices.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "refresh": {
          "name": "Refresh Cache?",
          "description": "True (default) to return real-time information from the spotify zeroconf api and update the cache; otherwise, False to just return the cached value."
        },
        "sort_result": {
          "name": "Sort Result?",
          "description": "True to sort result items by name prior to returning to the caller; otherwise, False to return results in the order that the Spotify Web API returned them."
        }
      }
    },
    "get_track_favorites": {
      "name": "Get Track Favorites",
      "description": "Get a list of the tracks saved in the current Spotify user's 'Your Library'.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items when manual paging is used.  Default is 20, Range is 1 to 50."
        },
        "offset": {
          "name": "Offset",
          "description": "The page index offset of the first item to return.  Use with limit to get the next set of items.  Default is 0 (the first item)."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        },
        "sort_result": {
          "name": "Sort Result?",
          "description": "True to sort result items by name prior to returning to the caller; otherwise, False to return results in the order that the Spotify Web API returned them."
        }
      }
    },
    "get_users_top_artists": {
      "name": "Get Users Top Artists",
      "description": "Get the current user's top artists based on calculated affinity.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "time_range": {
          "name": "Time Range",
          "description": "Over what time frame the affinities are computed. Valid values are `long_term` (calculated from several years of data and including all new data as it becomes available), `medium_term` (approximately last 6 months), and `short_term` (approximately last 4 weeks)."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items when manual paging is used.  Default is 20, Range is 1 to 50."
        },
        "offset": {
          "name": "Offset",
          "description": "The page index offset of the first item to return.  Use with limit to get the next set of items.  Default is 0 (the first item)."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        },
        "sort_result": {
          "name": "Sort Result?",
          "description": "True to sort result items by name prior to returning to the caller; otherwise, False to return results in the order that the Spotify Web API returned them."
        }
      }
    },
    "get_users_top_tracks": {
      "name": "Get Users Top Tracks",
      "description": "Get the current user's top tracks based on calculated affinity.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "time_range": {
          "name": "Time Range",
          "description": "Over what time frame the affinities are computed. Valid values are `long_term` (calculated from several years of data and including all new data as it becomes available), `medium_term` (approximately last 6 months), and `short_term` (approximately last 4 weeks)."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items when manual paging is used.  Default is 20, Range is 1 to 50."
        },
        "offset": {
          "name": "Offset",
          "description": "The page index offset of the first item to return.  Use with limit to get the next set of items.  Default is 0 (the first item)."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        },
        "sort_result": {
          "name": "Sort Result?",
          "description": "True to sort result items by name prior to returning to the caller; otherwise, False to return results in the order that the Spotify Web API returned them."
        }
      }
    },
    "player_activate_devices": {
      "name": "Player Activate Devices",
      "description": "Activates all Spotify Connect player devices, and (optionally) switches the active user context to the current user context.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "verify_user_context": {
          "name": "Verify User Context?",
          "description": "If True, the active user context of the resolved device is checked to ensure it matches the specified Spotify Connect user context.  If False, the user context will not be checked.  Default is False."
        },
        "delay": {
          "name": "Delay",
          "description": "Time delay (in seconds) to wait AFTER issuing the final Connect command (if necessary). This delay will give the spotify web api time to process the device list change before another command is issued.  Default is 0.50; value range is 0 - 10."
        }
      }
    },
    "player_media_play_context": {
      "name": "Player Media Play Context",
      "description": "Start playing one or more tracks of the specified context on a Spotify Connect device.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "context_uri": {
          "name": "Context Uri",
          "description": "Spotify URI of the context to play (e.g. `spotify:album:6vc9OTcyd3hyzabCmsdnwE`).  Valid contexts are albums, artists & playlists."
        },
        "offset_uri": {
          "name": "Offset Uri",
          "description": "Indicates from what Uri in the context playback should start (e.g. `1kWUud3vY5ij5r62zxpTRy`.  Only available when contextUri corresponds to an artist, album or playlist.  The offsetPosition argument will be used if this value is null."
        },
        "offset_position": {
          "name": "Offset Position",
          "description": "Indicates from what position in the context playback should start.  The value is zero-based, and can't be negative.  Only available when contextUri corresponds to an album or playlist."
        },
        "position_ms": {
          "name": "Seek Position",
          "description": "The position (in milliseconds) to seek to; must be a positive number.  Passing in a position that is greater than the length of the track will cause the player to start playing the next track."
        },
        "device_id": {
          "name": "Device ID",
          "description": "The id or name of the Spotify Connect Player device this command is targeting.  If not supplied, the user's currently active device is the target.  If no device is active (or an '*' is specified), then the SpotifyPlus default device is activated."
        },
        "delay": {
          "name": "Delay",
          "description": "Time delay (in seconds) to wait AFTER issuing the final Connect command (if necessary). This delay will give the spotify web api time to process the device list change before another command is issued.  Default is 0.50; value range is 0 - 10."
        }
      }
    },
    "player_media_play_track_favorites": {
      "name": "Player Media Play Track Favorites",
      "description": "Start playing track favorites on the specified Spotify Connect device.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "device_id": {
          "name": "Device ID",
          "description": "The id or name of the Spotify Connect Player device this command is targeting.  If not supplied, the user's currently active device is the target.  If no device is active (or an '*' is specified), then the SpotifyPlus default device is activated."
        },
        "shuffle": {
          "name": "Shuffle?",
          "description": "True to set player shuffle mode to on; otherwise, False for no shuffle."
        },
        "delay": {
          "name": "Delay",
          "description": "Time delay (in seconds) to wait AFTER issuing the command to the player.  This delay will give the spotify web api time to process the change before another command is issued.  Default is 0.50; value range is 0 - 10."
        },
        "resolve_device_id": {
          "name": "Resolve Device Id?",
          "description": "True to resolve the supplied `deviceId` value; otherwise, False not resolve the `deviceId` value as it has already been resolved.  Default is True."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to retrieve from favorites.  Default is 200."
        }
      }
    },
    "player_media_play_tracks": {
      "name": "Player Media Play Tracks",
      "description": "Start playing one or more tracks on the specified Spotify Connect device.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "uris": {
          "name": "Uri's",
          "description": "A list of Spotify track URIs to play; can be track or episode URIs.  A maximum of 50 items can be added in one request."
        },
        "position_ms": {
          "name": "Seek Position",
          "description": "The position (in milliseconds) to seek to; must be a positive number.  Passing in a position that is greater than the length of the track will cause the player to start playing the next track."
        },
        "device_id": {
          "name": "Device ID",
          "description": "The id or name of the Spotify Connect Player device this command is targeting.  If not supplied, the user's currently active device is the target.  If no device is active (or an '*' is specified), then the SpotifyPlus default device is activated."
        },
        "delay": {
          "name": "Delay",
          "description": "Time delay (in seconds) to wait AFTER issuing the final Connect command (if necessary). This delay will give the spotify web api time to process the device list change before another command is issued.  Default is 0.50; value range is 0 - 10."
        }
      }
    },
    "player_resolve_device_id": {
      "name": "Player Resolve Device ID",
      "description": "Resolves a Spotify Connect device identifier from a specified device id, name, alias id, or alias name.  This will ensure that the device id can be found on the network, as well as connect to the device if necessary with the current user context. ",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "device_value": {
          "name": "Device Value",
          "description": "The device id (e.g. '0d1841b0976bae2a3a310dd74c0f337465899bc8') or name (e.g. 'Bose-ST10-1') value to resolve."
        },
        "verify_user_context": {
          "name": "Verify User Context?",
          "description": "If True, the active user context of the resolved device is checked to ensure it matches the user context specified on the class constructor. If False, the user context will not be checked.  Default is True."
        },
        "verify_timeout": {
          "name": "Verify Timeout",
          "description": "Time delay (in seconds) to wait AFTER issuing the final Connect command (if necessary). This delay will give the spotify web api time to process the device list change before another command is issued.  Default is 5.0; value range is 0 - 10."
        }
      }
    },
    "player_set_repeat_mode": {
      "name": "Player Set Repeat Mode",
      "description": "Set repeat mode for the specified Spotify Connect device.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "state": {
          "name": "State",
          "description": "The repeat mode state to set; `track` will repeat the current track; `context` will repeat the current context; `off` will turn repeat off.  Default is 'off'."
        },
        "device_id": {
          "name": "Device ID",
          "description": "The id or name of the Spotify Connect Player device this command is targeting.  If not supplied, the user's currently active device is the target.  If no device is active (or an '*' is specified), then the SpotifyPlus default device is activated."
        },
        "delay": {
          "name": "Delay",
          "description": "Time delay (in seconds) to wait AFTER issuing the command to the player.  This delay will give the spotify web api time to process the change before another command is issued.  Default is 0.50; value range is 0 - 10."
        }
      }
    },
    "player_set_shuffle_mode": {
      "name": "Player Set Shuffle Mode",
      "description": "Set shuffle mode for the specified Spotify Connect device.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "state": {
          "name": "Shuffle State?",
          "description": "True to set player shuffle mode to on; otherwise, False for no shuffle."
        },
        "device_id": {
          "name": "Device ID",
          "description": "The id or name of the Spotify Connect Player device this command is targeting.  If not supplied, the user's currently active device is the target.  If no device is active (or an '*' is specified), then the SpotifyPlus default device is activated."
        },
        "delay": {
          "name": "Delay",
          "description": "Time delay (in seconds) to wait AFTER issuing the command to the player.  This delay will give the spotify web api time to process the change before another command is issued.  Default is 0.50; value range is 0 - 10."
        }
      }
    },
    "player_set_volume_level": {
      "name": "Player Set Volume Level",
      "description": "Set volume level for the specified Spotify Connect device.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "volume_level": {
          "name": "Volume Level",
          "description": "The volume level to set, expressed as a percentage value (e.g. 25).  Must be a value from 0 (muted) to 100 (max volume) inclusive."
        },
        "device_id": {
          "name": "Device ID",
          "description": "The id or name of the Spotify Connect Player device this command is targeting.  If not supplied, the user's currently active device is the target.  If no device is active (or an '*' is specified), then the SpotifyPlus default device is activated."
        },
        "delay": {
          "name": "Delay",
          "description": "Time delay (in seconds) to wait AFTER issuing the command to the player.  This delay will give the spotify web api time to process the change before another command is issued.  Default is 0.50; value range is 0 - 10."
        }
      }
    },
    "player_transfer_playback": {
      "name": "Player Transfer Playback",
      "description": "Transfer playback to a new Spotify Connect device and optionally begin playback.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "device_id": {
          "name": "Device ID",
          "description": "The id or name of the Spotify Connect Player device on which playback should be started/transferred.  If no device is specified, then the SpotifyPlus default device is activated."
        },
        "play": {
          "name": "Start Play?",
          "description": "True (default) to start playback on the new device; otherise, False to keep the current playback state on the existing device."
        },
        "delay": {
          "name": "Delay",
          "description": "Time delay (in seconds) to wait AFTER issuing the final Connect command (if necessary). This delay will give the spotify web api time to process the device list change before another command is issued.  Default is 0.50; value range is 0 - 10."
        },
        "refresh_device_list": {
          "name": "Refresh Device List?",
          "description": "True to refresh the Spotify Connect device list; otherwise, False to use the Spotify Connect device list cache.  Default is False."
        }
      }
    },
    "playlist_cover_image_add": {
      "name": "Playlist Cover Image Add",
      "description": "Replace the image used to represent a specific playlist.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "playlist_id": {
          "name": "Playlist ID",
          "description": "The Spotify ID of the playlist (e.g. 5AC9ZXA7nJ7oGWO911FuDG)."
        },
        "image_path": {
          "name": "Image Path",
          "description": "The fully-qualified path of the image to be uploaded (e.g. `www/images/spotify_playlist_default_image.png`).  The image must be in PNG or JPEG format, and cannot exceed 256KB in Base64 encoded size."
        }
      }
    },
    "playlist_change": {
      "name": "Playlist Change",
      "description": "Change a playlist's details (name, description, and public / private state).",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "playlist_id": {
          "name": "Playlist ID",
          "description": "The Spotify ID of the playlist (e.g. `5AC9ZXA7nJ7oGWO911FuDG`)."
        },
        "name": {
          "name": "Name",
          "description": "The updated name of the playlist (e.g. `My Updated Playlist`).  This name does not need to be unique; a user may have several playlists with the same name."
        },
        "description": {
          "name": "Description",
          "description": "The playlist description, as displayed in Spotify Clients and in the Web API."
        },
        "public": {
          "name": "Public?",
          "description": "If true, the playlist will be public; if false, it will be private."
        },
        "collaborative": {
          "name": "Collaborative?",
          "description": "If true, the playlist will be collaborative (other users can modify it).  To create a collaborative playlist you must also set the public argument to false."
        },
        "image_path": {
          "name": "Image Path",
          "description": "The fully-qualified path of the image to be uploaded (e.g. `www/images/spotify_playlist_default_image.png`).  The image must be in PNG or JPEG format, and cannot exceed 256KB in Base64 encoded size.  Omit this parameter if you do not wish to update the existing playlist image."
        }
      }
    },
    "playlist_create": {
      "name": "Playlist Create",
      "description": "Create an empty playlist for a Spotify user.  The playlist will remain empty until you add tracks.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "user_id": {
          "name": "User ID",
          "description": "The user's Spotify user ID (e.g. 32k99y2kg5lnn3mxhtmd2bpdkjfu).  Omit this argument to use the Spotify User ID of the player entity_id."
        },
        "name": {
          "name": "Name",
          "description": "The name for the new playlist (e.g. `My New Playlist`).  This name does not need to be unique; a user may have several playlists with the same name."
        },
        "description": {
          "name": "Description",
          "description": "The playlist description, as displayed in Spotify Clients and in the Web API."
        },
        "public": {
          "name": "Public?",
          "description": "If true, the playlist will be public; if false, it will be private."
        },
        "collaborative": {
          "name": "Collaborative?",
          "description": "If true, the playlist will be collaborative (other users can modify it).  To create a collaborative playlist you must also set the public argument to false."
        },
        "image_path": {
          "name": "Image Path",
          "description": "The fully-qualified path of the image to be uploaded (e.g. `www/images/spotify_playlist_default_image.png`).  The image must be in PNG or JPEG format, and cannot exceed 256KB in Base64 encoded size.  Omit this parameter if you do not wish to add a playlist image."
        }
      }
    },
    "playlist_items_add": {
      "name": "Playlist Items Add",
      "description": "Add one or more items to a user's playlist.  Items are added in the order they are listed in the `uris` argument.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "playlist_id": {
          "name": "Playlist ID",
          "description": "The Spotify ID of the playlist (e.g. 5AC9ZXA7nJ7oGWO911FuDG)."
        },
        "uris": {
          "name": "URI's",
          "description": "A comma-separated list of Spotify URIs to add; can be track or episode URIs (e.g. spotify:track:4iV5W9uYEdYUVa79Axb7Rh).  A maximum of 100 items can be specified in one request.  If nothing is specified, then the track (or episode) uri currently playing is used."
        },
        "position": {
          "name": "Position",
          "description": "The position to insert the items, a zero-based index.  For example, to insert the items in the first position use a value of 0; to insert the items in the third position use a value of 2.  Omit the parameter to append the items to the end of the playlist."
        }
      }
    },
    "playlist_items_clear": {
      "name": "Playlist Items Clear",
      "description": "Removes (clears) all items from a user's playlist.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "playlist_id": {
          "name": "Playlist ID",
          "description": "The Spotify ID of the playlist (e.g. 5AC9ZXA7nJ7oGWO911FuDG)."
        }
      }
    },
    "playlist_items_remove": {
      "name": "Playlist Items Remove",
      "description": "Remove one or more items from a user's playlist.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "playlist_id": {
          "name": "Playlist ID",
          "description": "The Spotify ID of the playlist (e.g. 5AC9ZXA7nJ7oGWO911FuDG)."
        },
        "uris": {
          "name": "URI's",
          "description": "A comma-separated list of Spotify URIs to remove; can be track or episode URIs (e.g. spotify:track:4iV5W9uYEdYUVa79Axb7Rh).  A maximum of 100 items can be specified in one request.  If nothing is specified, then the track (or episode) uri currently playing is used."
        },
        "snapshot_id": {
          "name": "Snapshot ID",
          "description": "The playlist's snapshot ID against which you want to make the changes (e.g. `MzgsMWVkNDY3MTQ5YjVjYWE0MzAyNjkyZWMyOThjNjE3YWMwOTY0ZmJjYg==`).  The API will validate that the specified items exist and make the changes, even if more recent changes have been made to the playlist.  If omitted, the current playlist is updated."
        }
      }
    },
    "remove_album_favorites": {
      "name": "Remove Album Favorites",
      "description": "Remove one or more albums from the current user's 'Your Library'.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "ids": {
          "name": "ID's",
          "description": "A comma-separated list of Spotify album id's (e.g. `6vc9OTcyd3hyzabCmsdnwE,382ObEPsp2rxGrnsizN5TX`).  A maximum of 50 id's may be specified.  If omitted, the currently playing track album uri id value is used."
        }
      }
    },
    "remove_track_favorites": {
      "name": "Remove Track Favorites",
      "description": "Remove one or more tracks from the current user's 'Your Library'.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "ids": {
          "name": "ID's",
          "description": "A comma-separated list of Spotify track id's (e.g. `1kWUud3vY5ij5r62zxpTRy,4eoYKv2kDwJS7gRGh5q6SK`).  A maximum of 50 id's may be specified.  If omitted, the currently playing context uri id value is used."
        }
      }
    },
    "save_album_favorites": {
      "name": "Save Album Favorites",
      "description": "Save one or more albums to the current user's 'Your Library'.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "ids": {
          "name": "ID's",
          "description": "A comma-separated list of Spotify album id's (e.g. `6vc9OTcyd3hyzabCmsdnwE,382ObEPsp2rxGrnsizN5TX`).  A maximum of 50 id's may be specified.  If omitted, the currently playing track album uri id value is used."
        }
      }
    },
    "save_track_favorites": {
      "name": "Save Track Favorites",
      "description": "Save one or more tracks to the current user's 'Your Library'.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "ids": {
          "name": "ID's",
          "description": "A comma-separated list of Spotify track id's (e.g. `1kWUud3vY5ij5r62zxpTRy,4eoYKv2kDwJS7gRGh5q6SK`).  A maximum of 50 id's may be specified.  If omitted, the currently playing context uri id value is used."
        }
      }
    },
    "search_albums": {
      "name": "Search Albums",
      "description": "Get Spotify catalog information about Albums that match a keyword string.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "criteria": {
          "name": "Search Criteria",
          "description": "The criteria to search for."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items when manual paging is used.  Default is 20, Range is 1 to 50."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the Spotify user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "search_artists": {
      "name": "Search Artists",
      "description": "Get Spotify catalog information about Artists that match a keyword string.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "criteria": {
          "name": "Search Criteria",
          "description": "The criteria to search for."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items when manual paging is used.  Default is 20, Range is 1 to 50."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the Spotify user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "search_audiobooks": {
      "name": "Search Audiobooks",
      "description": "Get Spotify catalog information about Audiobooks that match a keyword string.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "criteria": {
          "name": "Search Criteria",
          "description": "The criteria to search for."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items when manual paging is used.  Default is 20, Range is 1 to 50."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the Spotify user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "search_episodes": {
      "name": "Search Episodes",
      "description": "Get Spotify catalog information about Episodes that match a keyword string.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "criteria": {
          "name": "Search Criteria",
          "description": "The criteria to search for."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items when manual paging is used.  Default is 20, Range is 1 to 50."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the Spotify user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "search_playlists": {
      "name": "Search Playlists",
      "description": "Get Spotify catalog information about Playlists that match a keyword string.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "criteria": {
          "name": "Search Criteria",
          "description": "The criteria to search for."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items when manual paging is used.  Default is 20, Range is 1 to 50."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the Spotify user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "search_shows": {
      "name": "Search Shows",
      "description": "Get Spotify catalog information about Shows that match a keyword string.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "criteria": {
          "name": "Search Criteria",
          "description": "The criteria to search for."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items when manual paging is used.  Default is 20, Range is 1 to 50."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the Spotify user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "search_tracks": {
      "name": "Search Tracks",
      "description": "Get Spotify catalog information about Tracks that match a keyword string.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "criteria": {
          "name": "Search Criteria",
          "description": "The criteria to search for."
        },
        "limit": {
          "name": "Limit",
          "description": "The maximum number of items to return in a page of items when manual paging is used.  Default is 20, Range is 1 to 50."
        },
        "market": {
          "name": "Market / Country Code",
          "description": "An ISO 3166-1 alpha-2 country code. If a country code is specified, only content that is available in that market will be returned.  The country associated with the Spotify user account will take priority over this parameter."
        },
        "limit_total": {
          "name": "Limit Total",
          "description": "The maximum number of items to return for the request.  If specified, this argument overrides the limit and offset argument values and paging is automatically used to retrieve all available items up to the specified limit total."
        }
      }
    },
    "unfollow_artists": {
      "name": "Unfollow Artists",
      "description": "Remove the current user as a follower of one or more artists.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "ids": {
          "name": "ID's",
          "description": "A comma-separated list of Spotify artist id's (e.g. `2CIMQHirSU0MQqyYHq0eOx,1IQ2e1buppatiN1bxUVkrk`).  A maximum of 50 id's may be specified.  If omitted, the currently playing track artist uri id value is used."
        }
      }
    },
    "unfollow_playlist": {
      "name": "Unfollow Playlist",
      "description": "Remove the current user as a follower of a playlist.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "playlist_id": {
          "name": "Playlist ID",
          "description": "The Spotify ID of the playlist (e.g. `3cEYpjA9oz9GiPac4AsH4n`)."
        }
      }
    },
    "unfollow_users": {
      "name": "Unfollow Users",
      "description": "Remove the current user as a follower of one or more users.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify Web API."
        },
        "ids": {
          "name": "ID's",
          "description": "A comma-separated list of Spotify user IDs (e.g. `smedjan,3758dfdsfjk435hjk6k79lm0n3c4`).  A maximum of 50 IDs can be sent in one request."
        }
      }
    },
    "zeroconf_device_connect": {
      "name": "ZeroConf Device Connect",
      "description": "Calls the `addUser` Spotify Zeroconf API endpoint to issue a call to SpConnectionLoginBlob.  If successful, the associated device id is added to the Spotify Connect active device list for the specified user account.  This will also issue a `resetUsers` call prior to the `addUser` call.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify ZeroConf API service."
        },
        "host_ipv4_address": {
          "name": "Device IPV4 Address",
          "description": "IPV4 address at which the Spotify Connect Zeroconf API can be reached on the Spotify Connect device (e.g. '192.168.1.81')."
        },
        "host_ip_port": {
          "name": "Device IP Port",
          "description": "Port number at which the Spotify Connect Zeroconf API can be reached on the Spotify Connect device (e.g. 8200)."
        },
        "cpath": {
          "name": "CPath Identifier",
          "description": "Spotify Connect Zeroconf API CPath property value (e.g. '/zc')."
        },
        "version": {
          "name": "Version Indicator",
          "description": "Spotify Connect Zeroconf API version number that the device supports (e.g. '1.0')."
        },
        "use_ssl": {
          "name": "Use SSL?",
          "description": "True if the host device utilizes HTTPS Secure Sockets Layer (SSL) support; otherwise, False to utilize HTTP.  Default is False (HTTP)."
        },
        "username": {
          "name": "Spotify User Name",
          "description": "Spotify user name to login with (e.g. 'yourusername@mail.com').  This MUST match the account name (or one of them) that was used to configure Spotify Connect on the manufacturer device."
        },
        "password": {
          "name": "Spotify Password",
          "description": "Spotify Connect user password to login with."
        },
        "loginid": {
          "name": "Spotify Login ID",
          "description": "Spotify Connect login id to login with (e.g. '31l77fd87g8h9j00k89f07jf87ge').  This is also known as the canonical user id value.  This MUST be the value that relates to the `username` argument."
        },
        "pre_disconnect": {
          "name": "Pre Disconnect?",
          "description": "True if a Disconnect should be made prior to the Connect call.  This will ensure that the active user is logged out, which must be done if switching user accounts; otherwise, False to not issue a Disconnect call.  Default is False."
        },
        "verify_device_list_entry": {
          "name": "Verify Device List Entry?",
          "description": "True to ensure that the device id is present in the Spotify Connect device list before issuing a call to Connect; Connect will not be called if the device id is already in the list; otherwise, False to always call Connect to add the device.  Default is False."
        }
      }
    },
    "zeroconf_device_disconnect": {
      "name": "ZeroConf Device Disconnect",
      "description": "Calls the `resetUsers` Spotify Zeroconf API endpoint to issue a call to SpConnectionLogout. The currently logged in user (if any) will be logged out of Spotify Connect, and the device id removed from the active Spotify Connect device list.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify ZeroConf API service."
        },
        "host_ipv4_address": {
          "name": "Device IPV4 Address",
          "description": "IPV4 address at which the Spotify Connect Zeroconf API can be reached on the Spotify Connect device (e.g. '192.168.1.81')."
        },
        "host_ip_port": {
          "name": "Device IP Port",
          "description": "Port number at which the Spotify Connect Zeroconf API can be reached on the Spotify Connect device (e.g. 8200)."
        },
        "cpath": {
          "name": "CPath Identifier",
          "description": "Spotify Connect Zeroconf API CPath property value (e.g. '/zc')."
        },
        "version": {
          "name": "Version Indicator",
          "description": "Spotify Connect Zeroconf API version number that the device supports (e.g. '1.0')."
        },
        "use_ssl": {
          "name": "Use SSL?",
          "description": "True if the host device utilizes HTTPS Secure Sockets Layer (SSL) support; otherwise, False to utilize HTTP.  Default is False (HTTP)."
        }
      }
    },
    "zeroconf_device_getinfo": {
      "name": "ZeroConf Device GetInformation",
      "description": "Calls the `getInfo` Spotify Zeroconf API endpoint to return information about the device.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the Spotify ZeroConf API service."
        },
        "host_ipv4_address": {
          "name": "Device IPV4 Address",
          "description": "IPV4 address at which the Spotify Connect Zeroconf API can be reached on the Spotify Connect device (e.g. '192.168.1.81')."
        },
        "host_ip_port": {
          "name": "Device IP Port",
          "description": "Port number at which the Spotify Connect Zeroconf API can be reached on the Spotify Connect device (e.g. 8200)."
        },
        "cpath": {
          "name": "CPath Identifier",
          "description": "Spotify Connect Zeroconf API CPath property value (e.g. '/zc')."
        },
        "version": {
          "name": "Version Indicator",
          "description": "Spotify Connect Zeroconf API version number that the device supports (e.g. '1.0')."
        },
        "use_ssl": {
          "name": "Use SSL?",
          "description": "True if the host device utilizes HTTPS Secure Sockets Layer (SSL) support; otherwise, False to utilize HTTP.  Default is False (HTTP)."
        }
      }
    },
    "zeroconf_discover_devices": {
      "name": "ZeroConf Discover Devices",
      "description": "Discover Spotify Connect devices on the local network via the ZeroConf (aka MDNS) service, and return details about each device.",
      "fields": {
        "entity_id": {
          "name": "Entity ID",
          "description": "Entity ID of the SpotifyPlus device that will make the request to the ZeroConf service."
        },
        "timeout": {
          "name": "Timeout",
          "description": "Maximum amount of time to wait (in seconds) for the discovery to complete. Default is 5, range is 1 thru 10."
        }
      }
    }
  }
}
